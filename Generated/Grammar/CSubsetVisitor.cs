//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar/CSubset.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Interpretador.Generated {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CSubsetParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ICSubsetVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] CSubsetParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.preprocessorDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPreprocessorDirective([NotNull] CSubsetParser.PreprocessorDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] CSubsetParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] CSubsetParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] CSubsetParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.doWhileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoWhileStatement([NotNull] CSubsetParser.DoWhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSwitchStatement([NotNull] CSubsetParser.SwitchStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseStatement([NotNull] CSubsetParser.CaseStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.defaultStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefaultStatement([NotNull] CSubsetParser.DefaultStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] CSubsetParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] CSubsetParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.logicalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalExpression([NotNull] CSubsetParser.LogicalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] CSubsetParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] CSubsetParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] CSubsetParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] CSubsetParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] CSubsetParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.primary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimary([NotNull] CSubsetParser.PrimaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.structDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDeclaration([NotNull] CSubsetParser.StructDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.structMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructMember([NotNull] CSubsetParser.StructMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.unionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnionDeclaration([NotNull] CSubsetParser.UnionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.structInstance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructInstance([NotNull] CSubsetParser.StructInstanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.unionInstance"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnionInstance([NotNull] CSubsetParser.UnionInstanceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] CSubsetParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] CSubsetParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] CSubsetParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] CSubsetParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction([NotNull] CSubsetParser.FunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] CSubsetParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclaration([NotNull] CSubsetParser.DeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] CSubsetParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CSubsetParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] CSubsetParser.BreakStatementContext context);
}
} // namespace Interpretador.Generated
